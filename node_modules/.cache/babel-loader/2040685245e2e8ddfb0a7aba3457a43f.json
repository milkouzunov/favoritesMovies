{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas/index';\nimport MoviesReducers from './reducers/MoviesReducers';\nimport AuthReducers from './reducers/AuthReducers';\nconst reducer = combineReducers({\n  movies: MoviesReducers,\n  auth: AuthReducers\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nconsole.log(store.getState());\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/media/uzunov/78604C4A604C1174/favorites-movies/src/appRedux/store.js"],"names":["createStore","combineReducers","applyMiddleware","createSagaMiddleware","rootSaga","MoviesReducers","AuthReducers","reducer","movies","auth","sagaMiddleware","middleware","store","composeWithDevTools","console","log","getState","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC5BO,EAAAA,MAAM,EAAEH,cADoB;AAE5BI,EAAAA,IAAI,EAAEH;AAFsB,CAAD,CAA/B;AAIA,MAAMI,cAAc,GAAGP,oBAAoB,EAA3C;AAEA,MAAMQ,UAAU,GAAG,CAACD,cAAD,CAAnB;AAEA,MAAME,KAAK,GAAGZ,WAAW,CAACO,OAAD,EAAUM,mBAAmB,CAACX,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAA7B,CAAzB;AACAG,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACAN,cAAc,CAACO,GAAf,CAAmBb,QAAnB;AAGA,eAAeQ,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas/index';\n\nimport MoviesReducers from './reducers/MoviesReducers';\nimport AuthReducers from './reducers/AuthReducers';\n\nconst reducer = combineReducers({\n    movies: MoviesReducers,\n    auth: AuthReducers\n});\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nconsole.log(store.getState());\nsagaMiddleware.run(rootSaga)\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}