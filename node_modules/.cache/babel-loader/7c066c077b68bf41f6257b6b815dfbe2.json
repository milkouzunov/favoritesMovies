{"ast":null,"code":"import { call, put, fork, takeEvery, all } from \"redux-saga/effects\";\nimport { getMoviesSuccess, getMovieSuccess } from \"../actions/Movies\";\nimport { get, getById } from \"../../services/movieService\";\nimport { GET_MOVIES_REQUEST, GET_MOVIE_REQUEST, GET_MOVIE_SUCCESS } from \"../actionTypes\";\n\nfunction getMoviesRequestApi(movieTitle) {\n  return get(movieTitle).then(res => {\n    return res.json();\n  });\n}\n\nfunction getMovieRequestApi(movieId) {\n  return getById(movieId).then(res => {\n    return res.json();\n  });\n}\n\nfunction* getMovies(action) {\n  try {\n    const response = yield call(getMoviesRequestApi, action.movieTitle);\n    yield put(getMoviesSuccess(response));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* getMovie(action) {\n  try {\n    const response = yield call(getMovieRequestApi, action.movieId);\n    yield put(getMovieSuccess(response));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* getMoviesGenerator() {\n  yield takeEvery(GET_MOVIES_REQUEST, getMovies);\n}\n\nfunction* getMovieGenerator() {\n  yield takeEvery(GET_MOVIE_REQUEST, getMovie);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(getMoviesGenerator), fork(getMovieGenerator)]);\n}","map":{"version":3,"sources":["/media/uzunov/78604C4A604C1174/favorites-movies/src/appRedux/sagas/MoviesSaga.js"],"names":["call","put","fork","takeEvery","all","getMoviesSuccess","getMovieSuccess","get","getById","GET_MOVIES_REQUEST","GET_MOVIE_REQUEST","GET_MOVIE_SUCCESS","getMoviesRequestApi","movieTitle","then","res","json","getMovieRequestApi","movieId","getMovies","action","response","error","console","log","getMovie","getMoviesGenerator","getMovieGenerator","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAAyBC,SAAzB,EAAoCC,GAApC,QAA+C,oBAA/C;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,mBAAlD;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,6BAA7B;AAEA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,iBAHF,QAIO,gBAJP;;AAMA,SAASC,mBAAT,CAA8BC,UAA9B,EAA0C;AACxC,SAAON,GAAG,CAACM,UAAD,CAAH,CACNC,IADM,CACDC,GAAG,IAAI;AAAC,WAAOA,GAAG,CAACC,IAAJ,EAAP;AAAkB,GADzB,CAAP;AAED;;AAED,SAASC,kBAAT,CAA6BC,OAA7B,EAAsC;AACpC,SAAOV,OAAO,CAACU,OAAD,CAAP,CACNJ,IADM,CACDC,GAAG,IAAI;AAAC,WAAOA,GAAG,CAACC,IAAJ,EAAP;AAAkB,GADzB,CAAP;AAED;;AAED,UAAUG,SAAV,CAAoBC,MAApB,EAA4B;AAC1B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMrB,IAAI,CAACY,mBAAD,EAAsBQ,MAAM,CAACP,UAA7B,CAA3B;AACA,UAAMZ,GAAG,CAACI,gBAAgB,CAACgB,QAAD,CAAjB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,UAAUG,QAAV,CAAmBL,MAAnB,EAA2B;AACvB,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMrB,IAAI,CAACiB,kBAAD,EAAqBG,MAAM,CAACF,OAA5B,CAA3B;AACA,UAAMjB,GAAG,CAACK,eAAe,CAACe,QAAD,CAAhB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAED,UAAUI,kBAAV,GAA+B;AAC3B,QAAMvB,SAAS,CAACM,kBAAD,EAAqBU,SAArB,CAAf;AACH;;AACD,UAAUQ,iBAAV,GAA8B;AAC5B,QAAMxB,SAAS,CAACO,iBAAD,EAAoBe,QAApB,CAAf;AACD;;AACD,eAAe,UAAUG,QAAV,GAAsB;AACnC,QAAMxB,GAAG,CAAC,CACNF,IAAI,CAACwB,kBAAD,CADE,EAENxB,IAAI,CAACyB,iBAAD,CAFE,CAAD,CAAT;AAID","sourcesContent":["import { call, put, fork,takeEvery, all } from \"redux-saga/effects\";\nimport { getMoviesSuccess, getMovieSuccess } from \"../actions/Movies\";\nimport { get, getById } from \"../../services/movieService\";\n\nimport {\n  GET_MOVIES_REQUEST,\n  GET_MOVIE_REQUEST,\n  GET_MOVIE_SUCCESS,\n} from \"../actionTypes\";\n\nfunction getMoviesRequestApi (movieTitle) {\n  return get(movieTitle)\n  .then(res => {return res.json()})\n}\n\nfunction getMovieRequestApi (movieId) {\n  return getById(movieId)\n  .then(res => {return res.json()})\n}\n\nfunction* getMovies(action) {\n  try {\n    const response = yield call(getMoviesRequestApi, action.movieTitle);\n    yield put(getMoviesSuccess(response));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* getMovie(action) {\n    try {\n        const response = yield call(getMovieRequestApi, action.movieId);\n        yield put(getMovieSuccess(response))\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction* getMoviesGenerator() {\n    yield takeEvery(GET_MOVIES_REQUEST, getMovies)\n}\nfunction* getMovieGenerator() {\n  yield takeEvery(GET_MOVIE_REQUEST, getMovie)\n}\nexport default function* rootSaga () {\n  yield all([\n      fork(getMoviesGenerator),\n      fork(getMovieGenerator)\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}