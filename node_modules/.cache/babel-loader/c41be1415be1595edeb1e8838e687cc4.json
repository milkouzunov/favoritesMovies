{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\nimport config from './config';\nexport async function signUp(user) {\n  const {\n    username,\n    password,\n    rePassword\n  } = user;\n  console;\n\n  try {\n    const response = await fetch(`${config.API_URL}/auth/register`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        rePassword\n      })\n    });\n\n    if (response.ok == false) {\n      let error = await response.json();\n\n      if (error.error) {\n        error = error.error;\n      }\n\n      throw new Error(error);\n    }\n\n    try {\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      return response;\n    }\n  } catch (err) {\n    throw err;\n  }\n}\nexport async function signIn(user) {\n  const {\n    username,\n    password\n  } = user;\n\n  try {\n    const response = await fetch(`${config.API_URL}/auth/login`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n\n    if (response.ok == false) {\n      let error = (await response.json()).error;\n\n      if (error.error) {\n        error = error.error;\n      }\n\n      throw new Error(error);\n    }\n\n    try {\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('username', data.username);\n      return data.username;\n    } catch (err) {\n      return response;\n    }\n  } catch (err) {\n    throw err;\n  }\n}\nexport async function logout(history) {\n  localStorage.removeItem('token');\n  localStorage.removeItem('username');\n  history.push('/');\n}","map":{"version":3,"sources":["/media/uzunov/78604C4A604C1174/favorites-movies/src/services/authService.js"],"names":["config","signUp","user","username","password","rePassword","console","response","fetch","API_URL","method","headers","body","JSON","stringify","ok","error","json","Error","data","err","signIn","localStorage","setItem","token","logout","history","removeItem","push"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AAEA,OAAO,eAAeC,MAAf,CAAuBC,IAAvB,EAA6B;AAChC,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAmCH,IAAzC;AACAI,EAAAA,OAAO;;AAEP,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,MAAM,CAACS,OAAQ,gBAAnB,EAAoC;AAChEC,MAAAA,MAAM,EAAE,MADwD;AAEhEC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuD;AAKhEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACX,QAAAA,QAAD;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,OAAf;AAL0D,KAApC,CAA5B;;AAQA,QAAIE,QAAQ,CAACQ,EAAT,IAAe,KAAnB,EAA0B;AACtB,UAAIC,KAAK,GAAI,MAAMT,QAAQ,CAACU,IAAT,EAAnB;;AAEA,UAAID,KAAK,CAACA,KAAV,EAAiB;AACbA,QAAAA,KAAK,GAAGA,KAAK,CAACA,KAAd;AACH;;AACD,YAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AACH;;AAED,QAAI;AACA,YAAMG,IAAI,GAAG,MAAMZ,QAAQ,CAACU,IAAT,EAAnB;AACA,aAAOE,IAAP;AACH,KAHD,CAGE,OAAOC,GAAP,EAAW;AACT,aAAOb,QAAP;AACH;AAEJ,GAzBD,CAyBE,OAAOa,GAAP,EAAY;AACV,UAAMA,GAAN;AACH;AAEJ;AAED,OAAO,eAAeC,MAAf,CAAuBnB,IAAvB,EAA6B;AAChC,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBF,IAA7B;;AAGA,MAAI;AACA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,MAAM,CAACS,OAAQ,aAAnB,EAAiC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFoD;AAK7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACX,QAAAA,QAAD;AAAWC,QAAAA;AAAX,OAAf;AALuD,KAAjC,CAA5B;;AAQA,QAAIG,QAAQ,CAACQ,EAAT,IAAe,KAAnB,EAA0B;AACtB,UAAIC,KAAK,GAAG,CAAC,MAAMT,QAAQ,CAACU,IAAT,EAAP,EAAwBD,KAApC;;AACA,UAAIA,KAAK,CAACA,KAAV,EAAiB;AACbA,QAAAA,KAAK,GAAGA,KAAK,CAACA,KAAd;AACH;;AACD,YAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AACH;;AAED,QAAI;AACA,YAAMG,IAAI,GAAG,MAAMZ,QAAQ,CAACU,IAAT,EAAnB;AAEAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,KAAnC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,IAAI,CAAChB,QAAtC;AAEA,aAAOgB,IAAI,CAAChB,QAAZ;AACH,KAPD,CAOE,OAAOiB,GAAP,EAAW;AACT,aAAOb,QAAP;AACH;AAEJ,GA5BD,CA4BE,OAAOa,GAAP,EAAY;AACV,UAAMA,GAAN;AACH;AACJ;AAED,OAAO,eAAeK,MAAf,CAAuBC,OAAvB,EAAgC;AAEnCJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACAL,EAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACH","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport config from './config';\n\nexport async function signUp (user) {\n    const {username, password, rePassword} = user;\n    console\n\n    try {\n        const response = await fetch(`${config.API_URL}/auth/register`, {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({username, password, rePassword})\n    });\n\n        if (response.ok == false) {\n            let error = (await response.json());\n            \n            if( error.error) {\n                error = error.error;\n            }\n            throw new Error(error);\n        }\n\n        try {\n            const data = await response.json();\n            return data;\n        } catch (err){\n            return response;\n        }\n\n    } catch (err) {\n        throw err;\n    }\n    \n}\n\nexport async function signIn (user) {\n    const {username, password} = user;\n\n\n    try {\n        const response = await fetch(`${config.API_URL}/auth/login`, {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({username, password})\n    });\n\n        if (response.ok == false) {\n            let error = (await response.json()).error;\n            if( error.error) {\n                error = error.error;\n            }\n            throw new Error(error);\n        }\n\n        try {\n            const data = await response.json();\n\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('username', data.username);\n\n            return data.username;\n        } catch (err){\n            return response;\n        }\n\n    } catch (err) {\n        throw err;\n    }\n}\n\nexport async function logout (history) {\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    history.push('/');\n}\n\n"]},"metadata":{},"sourceType":"module"}