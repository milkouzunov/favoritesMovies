{"ast":null,"code":"var _jsxFileName = \"/media/uzunov/78604C4A604C1174/favorites-movies/src/Components/Details/Details.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport Parser from 'html-react-parser';\nimport StarRatings from \"react-star-ratings\";\nimport { Link } from \"@material-ui/core\";\nimport Comments from \"./Comments/Comments\";\nimport { getById } from \"../../services/movieService\";\nimport * as favoriteService from \"../../services/favoriteService\";\nimport * as reviewService from '../../services/reviewService';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthContext from \"../../contexts/AuthContext\";\nimport { getMovieRequest } from \"../../reducers/moviesReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Details({\n  match\n}) {\n  _s();\n\n  const username = useContext(AuthContext);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [rating, setRating] = useState(0);\n  const [isUserRating, setIsUserRating] = useState(false);\n  const dispatch = useDispatch();\n  const movieId = match.params.id;\n  useEffect(() => {\n    dispatch(getMovieRequest(movieId));\n  }, [movieId, rating]);\n  const movie = useSelector(state => state.movie.movie);\n  console.log(movie);\n  useEffect(() => {\n    if (movie.ratings) {\n      const rating = movie.ratings.reduce((acc, c) => acc + Number(c.rating), 0) / movie.ratings.length;\n      setRating(rating);\n      const userRating = movie.ratings.some(r => r.username == username);\n\n      if (userRating) {\n        setIsUserRating(false);\n      } else {\n        setIsUserRating(true);\n      }\n    } else {\n      setIsUserRating(true);\n    }\n  }, [rating]);\n  useEffect(() => {\n    if (username) {\n      favoriteService.get().then(res => {\n        return res.json();\n      }).then(favorites => {\n        if (favorites.length > 0) {\n          const isFavorite = favorites.some(x => x.movieId == movie.id);\n\n          if (isFavorite) {\n            setIsFavorite(true);\n          }\n        }\n      }).catch(error => console.log(error));\n    }\n  }, [movie]);\n\n  const addFavorite = e => {\n    e.preventDefault();\n    const addMovie = Object.assign({}, {\n      movieId: movie.id,\n      name: movie.name,\n      genres: movie.genres,\n      runtime: movie.runtime,\n      officialSite: movie.officialSite,\n      summary: movie.summary,\n      imageUrl: movie.imageUrl\n    });\n    favoriteService.add(addMovie).then(res => {\n      if (res.ok) {\n        setIsFavorite(true);\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const removeFavorite = e => {\n    e.preventDefault();\n    favoriteService.remove(movie.id).then(res => {\n      if (res.ok) {\n        setIsFavorite(false);\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const changeRating = async (newRating, name) => {\n    try {\n      await reviewService.addRatings({\n        rating: newRating,\n        username: name,\n        movieId: movie.id\n      });\n      setIsUserRating(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Details, \"KV9cLf99dpQD6qybkutPpEVjklo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/media/uzunov/78604C4A604C1174/favorites-movies/src/Components/Details/Details.js"],"names":["useContext","useEffect","useState","Parser","StarRatings","Link","Comments","getById","favoriteService","reviewService","useDispatch","useSelector","AuthContext","getMovieRequest","Details","match","username","isFavorite","setIsFavorite","rating","setRating","isUserRating","setIsUserRating","dispatch","movieId","params","id","movie","state","console","log","ratings","reduce","acc","c","Number","length","userRating","some","r","get","then","res","json","favorites","x","catch","error","addFavorite","e","preventDefault","addMovie","Object","assign","name","genres","runtime","officialSite","summary","imageUrl","add","ok","removeFavorite","remove","changeRating","newRating","addRatings"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAO,KAAKC,eAAZ,MAAiC,gCAAjC;AACA,OAAO,KAAKC,aAAZ,MAA+B,8BAA/B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,eAAT,QAAgC,8BAAhC;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA0B;AAAA;;AACvC,QAAMC,QAAQ,GAAGhB,UAAU,CAACY,WAAD,CAA3B;AAEA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMqB,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,OAAO,GAAGT,KAAK,CAACU,MAAN,CAAaC,EAA7B;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACV,eAAe,CAACW,OAAD,CAAhB,CAAR;AAED,GAHQ,EAGN,CAACA,OAAD,EAASL,MAAT,CAHM,CAAT;AAKA,QAAMQ,KAAK,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA1B,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAI0B,KAAK,CAACI,OAAV,EAAmB;AACjB,YAAMZ,MAAM,GAAGQ,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqB,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,GAAGE,MAAM,CAACD,CAAC,CAACf,MAAH,CAA7C,EAAyD,CAAzD,IAA8DQ,KAAK,CAACI,OAAN,CAAcK,MAA3F;AACAhB,MAAAA,SAAS,CAACD,MAAD,CAAT;AACA,YAAMkB,UAAU,GAAGV,KAAK,CAACI,OAAN,CAAcO,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACvB,QAAF,IAAcA,QAAtC,CAAnB;;AAEA,UAAGqB,UAAH,EAAe;AACbf,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OAFD,MAEO;AACLA,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AAEF,KAXD,MAWO;AACHA,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AAEJ,GAjBQ,EAiBN,CAACH,MAAD,CAjBM,CAAT;AAmBAlB,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAGe,QAAH,EAAa;AACXR,MAAAA,eAAe,CAACgC,GAAhB,GACCC,IADD,CACMC,GAAG,IAAI;AAAE,eAAOA,GAAG,CAACC,IAAJ,EAAP;AAAoB,OADnC,EAECF,IAFD,CAEOG,SAAD,IAAe;AACnB,YAAGA,SAAS,CAACR,MAAV,GAAmB,CAAtB,EAAyB;AACvB,gBAAMnB,UAAU,GAAG2B,SAAS,CAACN,IAAV,CAAeO,CAAC,IAAIA,CAAC,CAACrB,OAAF,IAAaG,KAAK,CAACD,EAAvC,CAAnB;;AACA,cAAGT,UAAH,EAAe;AACXC,YAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACF;AACF,OATD,EAUC4B,KAVD,CAUOC,KAAK,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,KAAZ,CAVhB;AAWD;AAEF,GAhBQ,EAgBN,CAACpB,KAAD,CAhBM,CAAT;;AAkBA,QAAMqB,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CACb,EADa,EAEb;AACE7B,MAAAA,OAAO,EAAEG,KAAK,CAACD,EADjB;AAEE4B,MAAAA,IAAI,EAAE3B,KAAK,CAAC2B,IAFd;AAGEC,MAAAA,MAAM,EAAE5B,KAAK,CAAC4B,MAHhB;AAIEC,MAAAA,OAAO,EAAE7B,KAAK,CAAC6B,OAJjB;AAKEC,MAAAA,YAAY,EAAE9B,KAAK,CAAC8B,YALtB;AAMEC,MAAAA,OAAO,EAAE/B,KAAK,CAAC+B,OANjB;AAOEC,MAAAA,QAAQ,EAAEhC,KAAK,CAACgC;AAPlB,KAFa,CAAjB;AAYEnD,IAAAA,eAAe,CAACoD,GAAhB,CAAoBT,QAApB,EACDV,IADC,CACIC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACmB,EAAP,EAAW;AACP3C,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,KALC,EAMD4B,KANC,CAMKC,KAAK,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,KAAZ,CANd;AAOH,GArBD;;AAuBA,QAAMe,cAAc,GAAIb,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA1C,IAAAA,eAAe,CAACuD,MAAhB,CAAuBpC,KAAK,CAACD,EAA7B,EACCe,IADD,CACMC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACmB,EAAP,EAAW;AACP3C,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,KALD,EAMC4B,KAND,CAMOC,KAAK,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,KAAZ,CANhB;AAOD,GAVD;;AAcA,QAAMiB,YAAY,GAAG,OAAOC,SAAP,EAAkBX,IAAlB,KAA2B;AAG9C,QAAI;AACF,YAAM7C,aAAa,CAACyD,UAAd,CAAyB;AAC7B/C,QAAAA,MAAM,EAAE8C,SADqB;AAE7BjD,QAAAA,QAAQ,EAAEsC,IAFmB;AAG7B9B,QAAAA,OAAO,EAAEG,KAAK,CAACD;AAHc,OAAzB,CAAN;AAKEJ,MAAAA,eAAe,CAAC,KAAD,CAAf;AAGH,KATD,CASE,OAAMyB,KAAN,EAAa;AACblB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACD;AAGF,GAjBD;;AAmBA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApHuBjC,O;UAOLJ,W,EASHC,W;;;KAhBQG,O","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport Parser from 'html-react-parser';\n\nimport StarRatings from \"react-star-ratings\";\n\nimport { Link } from \"@material-ui/core\";\nimport Comments from \"./Comments/Comments\";\n\nimport { getById } from \"../../services/movieService\";\nimport * as favoriteService from \"../../services/favoriteService\";\nimport * as reviewService from '../../services/reviewService';\n\nimport { useDispatch, useSelector} from 'react-redux';\n\nimport AuthContext from \"../../contexts/AuthContext\";\nimport { getMovieRequest } from \"../../reducers/moviesReducer\";\n\nexport default function Details({match}) {\n  const username = useContext(AuthContext);\n\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [rating, setRating] = useState(0);\n  const [isUserRating, setIsUserRating] = useState(false);\n\n  const dispatch = useDispatch();\n  \n  const movieId = match.params.id;\n\n  useEffect(() => {\n    dispatch(getMovieRequest(movieId));\n\n  }, [movieId,rating]);\n\n  const movie = useSelector((state) => state.movie.movie);\n  console.log(movie);\n  useEffect(() => {\n      \n      if( movie.ratings) {\n        const rating = movie.ratings.reduce((acc, c) => acc + Number(c.rating), 0) / movie.ratings.length;\n        setRating(rating);\n        const userRating = movie.ratings.some(r => r.username == username);\n\n        if(userRating) {\n          setIsUserRating(false);\n        } else {\n          setIsUserRating(true);\n        }\n\n      } else {\n          setIsUserRating(true);\n      }\n\n  }, [rating]); \n\n  useEffect(() => {\n    \n    if(username) {\n      favoriteService.get()\n      .then(res => { return res.json(); })\n      .then((favorites) => {\n        if(favorites.length > 0) {\n          const isFavorite = favorites.some(x => x.movieId == movie.id);\n          if(isFavorite) {\n              setIsFavorite(true);\n          } \n        }\n      })\n      .catch(error => console.log(error));\n    }\n\n  }, [movie]);\n  \n  const addFavorite = (e) => {\n    e.preventDefault();\n    const addMovie = Object.assign(\n        {},\n        {\n          movieId: movie.id,\n          name: movie.name,\n          genres: movie.genres,\n          runtime: movie.runtime,\n          officialSite: movie.officialSite,\n          summary: movie.summary,\n          imageUrl: movie.imageUrl,\n        }\n      );\n      favoriteService.add(addMovie)\n    .then(res => {\n        if(res.ok) {\n            setIsFavorite(true);\n        }\n    })\n    .catch(error => console.log(error));\n  };\n\n  const removeFavorite = (e) => {\n    e.preventDefault();\n    \n    favoriteService.remove(movie.id)\n    .then(res => {\n        if(res.ok) {\n            setIsFavorite(false);\n        }\n    })\n    .catch(error => console.log(error));\n  };\n\n  \n\n  const changeRating = async (newRating, name) => {\n    \n    \n    try {\n      await reviewService.addRatings({\n        rating: newRating,\n        username: name,\n        movieId: movie.id\n      });\n        setIsUserRating(false);\n      \n\n    } catch(error) {\n      console.log(error);\n    }\n\n    \n  };\n  \n  return (\n    <section>\n     \n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}