{"ast":null,"code":"var _jsxFileName = \"/media/uzunov/78604C4A604C1174/favorites-movies/src/Components/Details/Comments/Comments.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useEffect, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Comment, Form, Button, List, Input } from 'antd';\nimport AuthContext from '../../../contexts/AuthContext';\nimport { addComment } from '../../../services/reviewService';\nimport Error from '../../Error';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst CommentList = ({\n  comments\n}) => /*#__PURE__*/_jsxDEV(List, {\n  dataSource: comments,\n  header: `${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`,\n  itemLayout: \"horizontal\",\n  renderItem: props => /*#__PURE__*/_jsxDEV(Comment, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 26\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c = CommentList;\n\nconst Editor = ({\n  error,\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n    children: /*#__PURE__*/_jsxDEV(TextArea, {\n      rows: 2,\n      onChange: onChange,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Error, {\n    style: {},\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c2 = Editor;\n\nfunction Comments({\n  movieComments,\n  movieId\n}) {\n  _s();\n\n  const username = useSelector;\n  const [comments, setComments] = useState([]);\n  const [submitting, setSubmiting] = useState(false);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (movieComments) {\n      movieComments = movieComments.map(m => {\n        m = {\n          author: m.username,\n          content: m.comment,\n          movieId: m.movieId\n        };\n        return m;\n      });\n      setComments(movieComments);\n    }\n  }, [movieComments]);\n\n  const handleSubmit = () => {\n    if (!value) {\n      return;\n    }\n\n    setSubmiting(true);\n    setTimeout(() => {\n      if (value.length < 10) {\n        setSubmiting(false);\n        return setError('Comment must be more than 10 Characters!');\n      } else {\n        setError('');\n      }\n\n      setComments(state => [...state, {\n        author: username,\n        content: value,\n        movieId: movieId\n      }]);\n      addComment({\n        username,\n        comment: value,\n        movieId: movieId\n      }).catch(error => {\n        setSubmiting(false);\n        return setError(error.toString());\n      });\n      setSubmiting(false);\n      setValue('');\n    }, 1000);\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [comments.length > 0 && /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Comment, {\n      style: {\n        marginBottom: \"10em\"\n      },\n      content: username ? /*#__PURE__*/_jsxDEV(Editor, {\n        error: error,\n        onChange: handleChange,\n        onSubmit: handleSubmit,\n        submitting: submitting,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Comments, \"G0iySF4o44qK8oGRuaQQKz3kSOc=\");\n\n_c3 = Comments;\nexport default Comments;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CommentList\");\n$RefreshReg$(_c2, \"Editor\");\n$RefreshReg$(_c3, \"Comments\");","map":{"version":3,"sources":["/media/uzunov/78604C4A604C1174/favorites-movies/src/Components/Details/Comments/Comments.js"],"names":["useContext","useEffect","useState","Comment","Form","Button","List","Input","AuthContext","addComment","Error","useSelector","TextArea","CommentList","comments","length","props","Editor","error","onChange","onSubmit","submitting","value","Comments","movieComments","movieId","username","setComments","setSubmiting","setValue","setError","map","m","author","content","comment","handleSubmit","setTimeout","state","catch","toString","handleChange","e","target","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport {useContext, useEffect, useState} from 'react';\n\nimport 'antd/dist/antd.css';\nimport { Comment, Form, Button, List, Input } from 'antd';\n\nimport AuthContext from '../../../contexts/AuthContext';\nimport { addComment } from '../../../services/reviewService';\n\nimport Error from '../../Error';\nimport { useSelector } from 'react-redux';\n\nconst { TextArea } = Input;\n\nconst CommentList = ({ comments }) => (\n  <List\n    dataSource={comments}\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n    itemLayout=\"horizontal\"\n    renderItem={props => <Comment {...props} />}\n  />\n);\n\nconst Editor = ({error, onChange, onSubmit, submitting, value }) => (\n  <>\n    <Form.Item >\n      <TextArea rows={2} onChange={onChange} value={value} />\n    </Form.Item>\n    <Error style={{\n\n    }}>{error}</Error>\n    <Form.Item>\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n        Add Comment\n      </Button>\n    </Form.Item>\n  </>\n);\n\nfunction Comments ({movieComments, movieId}) {\n  const username = useSelector;\n\n  const [comments, setComments] = useState([]);\n  const [submitting, setSubmiting] = useState(false);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if(movieComments) {\n      movieComments = movieComments.map(m => {\n        m = {\n          author: m.username,\n          content: m.comment,\n          movieId: m.movieId\n        };\n\n        return m;\n      });\n      setComments(movieComments);\n    }\n  }, [movieComments]);\n  \n  const handleSubmit = () => {\n    if (!value) {\n      return;\n    }\n    setSubmiting(true);\n\n\n    setTimeout(() => {\n      if(value.length < 10) {\n        setSubmiting(false);\n        return setError('Comment must be more than 10 Characters!');\n      } else { \n        setError('');\n      }\n      setComments(state => [...state, \n        {\n          author: username,\n          content: value,\n          movieId: movieId\n        }\n      ]);\n\n      addComment({\n        username,\n        comment: value,\n        movieId: movieId\n      })\n      .catch(error => { \n        setSubmiting(false);\n        return setError(error.toString()); \n      });\n\n      setSubmiting(false);\n      setValue('');\n\n    }, 1000);\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n    return (\n      <>\n        {comments.length > 0 && <CommentList comments={comments} />}\n        <Comment \n          style={{marginBottom: \"10em\"}}\n          content={ username ?\n            <Editor\n              error={error}\n              onChange={handleChange}\n              onSubmit={handleSubmit}\n              submitting={submitting}\n              value={value}\n            /> : null\n          }\n          \n        />\n      </>\n    );\n  \n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}