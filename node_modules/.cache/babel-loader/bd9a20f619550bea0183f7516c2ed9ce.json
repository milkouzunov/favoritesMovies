{"ast":null,"code":"import { call, put, fork, takeEvery, all } from \"redux-saga/effects\";\nimport { signupSuccess, signinSuccess } from \"../actions/AuthActions\";\nimport { signUp, signIn } from \"../../services/authService\";\nimport { SIGNUP_REQUEST, SIGNIN_REQUEST } from \"../actionTypes\";\n\nfunction signupRequestApi({\n  username,\n  password,\n  rePassword\n}) {\n  console.log(username, password, rePassword);\n  return signUp({\n    username,\n    password,\n    rePassword\n  });\n}\n\nfunction signinRequestApi({\n  username,\n  password\n}) {\n  return signIn({\n    username,\n    password\n  });\n}\n\nfunction* signup(action) {\n  try {\n    console.log(action);\n    const response = yield call(signupRequestApi, action.userData);\n    yield put(signupSuccess(response));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* signin(action) {\n  try {\n    const response = yield call(signinRequestApi, action.userData);\n    yield put(signinSuccess(response));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* signupGenerator() {\n  yield takeEvery(SIGNUP_REQUEST, signup);\n}\n\nfunction* signinGenerator() {\n  yield takeEvery(SIGNIN_REQUEST, signin);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(signupGenerator), fork(signinGenerator)]);\n}","map":{"version":3,"sources":["/media/uzunov/78604C4A604C1174/favorites-movies/src/appRedux/sagas/AuthSaga.js"],"names":["call","put","fork","takeEvery","all","signupSuccess","signinSuccess","signUp","signIn","SIGNUP_REQUEST","SIGNIN_REQUEST","signupRequestApi","username","password","rePassword","console","log","signinRequestApi","signup","action","response","userData","error","signin","signupGenerator","signinGenerator","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAAyBC,SAAzB,EAAoCC,GAApC,QAA+C,oBAA/C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,wBAA7C;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,4BAA/B;AAEA,SACEC,cADF,EAEEC,cAFF,QAGO,gBAHP;;AAKA,SAASC,gBAAT,CAA2B;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAA3B,EAA6D;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,QAAtB,EAAgCC,UAAhC;AACF,SAAOP,MAAM,CAAC;AAACK,IAAAA,QAAD;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAAD,CAAb;AACD;;AAED,SAASG,gBAAT,CAA2B;AAACL,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAA3B,EAAiD;AAC/C,SAAOL,MAAM,CAAC;AAACI,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,CAAb;AACD;;AAED,UAAUK,MAAV,CAAiBC,MAAjB,EAAyB;AACvB,MAAI;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACF,UAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACW,gBAAD,EAAmBQ,MAAM,CAACE,QAA1B,CAA3B;AACA,UAAMpB,GAAG,CAACI,aAAa,CAACe,QAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD;AACF;;AAED,UAAUC,MAAV,CAAiBJ,MAAjB,EAAyB;AACrB,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACiB,gBAAD,EAAmBE,MAAM,CAACE,QAA1B,CAA3B;AACA,UAAMpB,GAAG,CAACK,aAAa,CAACc,QAAD,CAAd,CAAT;AACH,GAHD,CAGE,OAAOE,KAAP,EAAc;AACZP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACJ;;AAED,OAAO,UAAUE,eAAV,GAA4B;AACjC,QAAMrB,SAAS,CAACM,cAAD,EAAiBS,MAAjB,CAAf;AACD;;AACD,UAAUO,eAAV,GAA4B;AAC1B,QAAMtB,SAAS,CAACO,cAAD,EAAiBa,MAAjB,CAAf;AACD;;AAGD,eAAe,UAAUG,QAAV,GAAsB;AACnC,QAAMtB,GAAG,CAAC,CACNF,IAAI,CAACsB,eAAD,CADE,EAENtB,IAAI,CAACuB,eAAD,CAFE,CAAD,CAAT;AAID","sourcesContent":["import { call, put, fork,takeEvery, all } from \"redux-saga/effects\";\nimport { signupSuccess, signinSuccess } from \"../actions/AuthActions\";\nimport { signUp, signIn } from \"../../services/authService\";\n\nimport {\n  SIGNUP_REQUEST,\n  SIGNIN_REQUEST,\n} from \"../actionTypes\";\n\nfunction signupRequestApi ({username, password, rePassword}) {\n    console.log(username, password, rePassword);\n  return signUp({username, password, rePassword});\n}\n\nfunction signinRequestApi ({username, password}) {\n  return signIn({username, password});\n}\n\nfunction* signup(action) {\n  try {\n      console.log(action);\n    const response = yield call(signupRequestApi, action.userData);\n    yield put(signupSuccess(response));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* signin(action) {\n    try {\n        const response = yield call(signinRequestApi, action.userData);\n        yield put(signinSuccess(response))\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function* signupGenerator() {\n  yield takeEvery(SIGNUP_REQUEST, signup)\n}\nfunction* signinGenerator() {\n  yield takeEvery(SIGNIN_REQUEST, signin)\n}\n\n\nexport default function* rootSaga () {\n  yield all([\n      fork(signupGenerator),\n      fork(signinGenerator)\n  ])\n}"]},"metadata":{},"sourceType":"module"}