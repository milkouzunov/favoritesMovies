{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { red } from './reducers/MoviesReducers';\nimport rootSaga from './sagas/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst reducer = () => combineReducers({\n  red\n});\n\nconsole.log(red);\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nconsole.log(store.getState());\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/media/uzunov/78604C4A604C1174/favorites-movies/src/appRedux/store.js"],"names":["createStore","combineReducers","applyMiddleware","createSagaMiddleware","red","rootSaga","composeWithDevTools","reducer","console","log","sagaMiddleware","middleware","store","getState","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,GAAR,QAAkB,2BAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,OAAO,GAAG,MAAMN,eAAe,CAAC;AAClCG,EAAAA;AADkC,CAAD,CAArC;;AAGAI,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,MAAMM,cAAc,GAAGP,oBAAoB,EAA3C;AAEA,MAAMQ,UAAU,GAAG,CAACD,cAAD,CAAnB;AAEA,MAAME,KAAK,GAAGZ,WAAW,CAACO,OAAD,EAAUD,mBAAmB,CAACJ,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAA7B,CAAzB;AACAH,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,QAAN,EAAZ;AACAH,cAAc,CAACI,GAAf,CAAmBT,QAAnB;AAGA,eAAeO,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {red} from './reducers/MoviesReducers';\nimport rootSaga from './sagas/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst reducer = () => combineReducers({\n    red\n});\nconsole.log(red);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nconsole.log(store.getState());\nsagaMiddleware.run(rootSaga)\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}