{"ast":null,"code":"var _jsxFileName = \"/media/uzunov/78604C4A604C1174/favorites-movies/src/Components/Details/Details.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport Parser from 'html-react-parser';\nimport StarRatings from \"react-star-ratings\";\nimport { Link } from \"@material-ui/core\";\nimport Comments from \"./Comments/Comments\";\nimport { getById } from \"../../services/movieService\";\nimport * as favoriteService from \"../../services/favoriteService\";\nimport * as reviewService from '../../services/reviewService';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthContext from \"../../contexts/AuthContext\";\nimport { getMovieRequest } from \"../../reducers/moviesReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Details({\n  match\n}) {\n  _s();\n\n  const username = useContext(AuthContext);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [rating, setRating] = useState(0);\n  const [isUserRating, setIsUserRating] = useState(false);\n  const dispatch = useDispatch();\n  const movieId = match.params.id;\n  console.log(movieId);\n  useEffect(() => {\n    dispatch(getMovieRequest(movieId));\n  }, [movieId, rating]);\n  const movie = useSelector(state => state.movie.movie);\n  console.log(movie);\n  useEffect(() => {\n    if (username) {\n      favoriteService.get().then(res => {\n        return res.json();\n      }).then(favorites => {\n        if (favorites.length > 0) {\n          const isFavorite = favorites.some(x => x.movieId == movie.id);\n\n          if (isFavorite) {\n            setIsFavorite(true);\n          }\n        }\n      }).catch(error => console.log(error));\n    }\n  }, [movie]);\n\n  const addFavorite = e => {\n    e.preventDefault();\n    const addMovie = Object.assign({}, {\n      movieId: movie.id,\n      name: movie.name,\n      genres: movie.genres,\n      runtime: movie.runtime,\n      officialSite: movie.officialSite,\n      summary: movie.summary,\n      imageUrl: movie.imageUrl\n    });\n    favoriteService.add(addMovie).then(res => {\n      if (res.ok) {\n        setIsFavorite(true);\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const removeFavorite = e => {\n    e.preventDefault();\n    favoriteService.remove(movie.id).then(res => {\n      if (res.ok) {\n        setIsFavorite(false);\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const changeRating = async (newRating, name) => {\n    try {\n      await reviewService.addRatings({\n        rating: newRating,\n        username: name,\n        movieId: movie.id\n      });\n      setIsUserRating(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Details, \"rXNH77zzb2mrngmrcPZLxscUdCk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/media/uzunov/78604C4A604C1174/favorites-movies/src/Components/Details/Details.js"],"names":["useContext","useEffect","useState","Parser","StarRatings","Link","Comments","getById","favoriteService","reviewService","useDispatch","useSelector","AuthContext","getMovieRequest","Details","match","username","isFavorite","setIsFavorite","rating","setRating","isUserRating","setIsUserRating","dispatch","movieId","params","id","console","log","movie","state","get","then","res","json","favorites","length","some","x","catch","error","addFavorite","e","preventDefault","addMovie","Object","assign","name","genres","runtime","officialSite","summary","imageUrl","add","ok","removeFavorite","remove","changeRating","newRating","addRatings"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport Parser from 'html-react-parser';\n\nimport StarRatings from \"react-star-ratings\";\n\nimport { Link } from \"@material-ui/core\";\nimport Comments from \"./Comments/Comments\";\n\nimport { getById } from \"../../services/movieService\";\nimport * as favoriteService from \"../../services/favoriteService\";\nimport * as reviewService from '../../services/reviewService';\n\nimport { useDispatch, useSelector} from 'react-redux';\n\nimport AuthContext from \"../../contexts/AuthContext\";\nimport { getMovieRequest } from \"../../reducers/moviesReducer\";\n\nexport default function Details({match}) {\n  const username = useContext(AuthContext);\n\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [rating, setRating] = useState(0);\n  const [isUserRating, setIsUserRating] = useState(false);\n\n  const dispatch = useDispatch();\n  \n  const movieId = match.params.id;\n  console.log(movieId);\n  useEffect(() => {\n    dispatch(getMovieRequest(movieId));\n\n  }, [movieId,rating]);\n\n  const movie = useSelector((state) => state.movie.movie);\n  console.log(movie);\n \n\n  useEffect(() => {\n    \n    if(username) {\n      favoriteService.get()\n      .then(res => { return res.json(); })\n      .then((favorites) => {\n        if(favorites.length > 0) {\n          const isFavorite = favorites.some(x => x.movieId == movie.id);\n          if(isFavorite) {\n              setIsFavorite(true);\n          } \n        }\n      })\n      .catch(error => console.log(error));\n    }\n\n  }, [movie]);\n  \n  const addFavorite = (e) => {\n    e.preventDefault();\n    const addMovie = Object.assign(\n        {},\n        {\n          movieId: movie.id,\n          name: movie.name,\n          genres: movie.genres,\n          runtime: movie.runtime,\n          officialSite: movie.officialSite,\n          summary: movie.summary,\n          imageUrl: movie.imageUrl,\n        }\n      );\n      favoriteService.add(addMovie)\n    .then(res => {\n        if(res.ok) {\n            setIsFavorite(true);\n        }\n    })\n    .catch(error => console.log(error));\n  };\n\n  const removeFavorite = (e) => {\n    e.preventDefault();\n    \n    favoriteService.remove(movie.id)\n    .then(res => {\n        if(res.ok) {\n            setIsFavorite(false);\n        }\n    })\n    .catch(error => console.log(error));\n  };\n\n  \n\n  const changeRating = async (newRating, name) => {\n    \n    \n    try {\n      await reviewService.addRatings({\n        rating: newRating,\n        username: name,\n        movieId: movie.id\n      });\n        setIsUserRating(false);\n      \n\n    } catch(error) {\n      console.log(error);\n    }\n\n    \n  };\n  \n  return (\n    <section>\n     \n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}